
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'TkAnd TkArray TkArrow TkAsig TkAtoi TkBool TkCBlock TkCBracket TkClosePar TkComma TkComment TkConcat TkDeclare TkDiv TkDo TkEqual TkFalse TkFi TkFor TkGeq TkGreater TkGuard TkId TkIf TkIn TkInt TkLeq TkLess TkMax TkMin TkMinus TkMod TkMult TkNEqual TkNot TkNum TkOBlock TkOBracket TkOd TkOpenPar TkOr TkPlus TkPrint TkPrintln TkRead TkRof TkSemicolon TkSize TkSoForth TkString TkTo TkTrue TkTwoPoints program : bloque bloque : TkOBlock t TkCBlock\n    t : casoInstrucciones\n      | TkDeclare declaracionVariables casoInstrucciones\n    declaracionVariables : listaDeclaraciones TkTwoPoints tipos TkSemicolon declaracionVariables\n                            | listaDeclaraciones TkTwoPoints tipos\n    \n    tipos : tipo TkComma tipos\n          | tipo\n    listaDeclaraciones : TkId TkComma listaDeclaraciones\n                          | TkId\n    asignacion : TkId TkAsig listaExpresion\n                  | TkId TkAsig asignacionArreglos\n    listaExpresion : listaExpresion TkComma expresion\n                      | expresion\n    asignacionArreglos : TkId listaIndices posicionArreglolistaIndices : listaIndices TkOpenPar number TkTwoPoints number TkClosePar\n                    | TkOpenPar number TkTwoPoints number TkClosePar\n    posicionArreglo : TkOBracket number TkCBracket\n                       | empty\n    casoInstrucciones : Instruccion\n                         | casoInstrucciones TkSemicolon Instruccion\n    \n    Instruccion : If\n                | For\n                | Do\n                | singleInstruccion\n    \n    \n    singleInstruccion : asignacion\n                      | read\n                      | print\n    \n    \n    If : TkIf condicion TkArrow bloque variasGuardias TkFi\n       | TkIf condicion TkArrow singleInstruccion variasGuardias TkFi\n       | TkIf condicion TkArrow expresion variasGuardias TkFi\n       | TkIf TkOpenPar condicion TkClosePar TkArrow bloque variasGuardias TkFi\n       | TkIf TkOpenPar condicion TkClosePar TkArrow singleInstruccion variasGuardias TkFi\n       | TkIf TkOpenPar condicion TkClosePar TkArrow expresion variasGuardias TkFi\n    \n    \n    variasGuardias : TkGuard condicion TkArrow bloque variasGuardias\n                   | TkGuard condicion TkArrow print variasGuardias\n                   | empty\n    \n    \n    For : TkFor TkId TkIn expresion TkTo expresion TkArrow bloque TkRof\n    \n    Do : TkDo condicion TkArrow bloque variasGuardias TkOd\n       | TkDo condicion TkArrow singleInstruccion variasGuardias TkOd\n       | TkDo condicion TkArrow expresion variasGuardias TkOd\n       | TkDo TkOpenPar condicion TkClosePar TkArrow bloque variasGuardias TkOd\n       | TkDo TkOpenPar condicion TkClosePar TkArrow singleInstruccion variasGuardias TkOd\n       | TkDo TkOpenPar condicion TkClosePar TkArrow expresion variasGuardias TkOd\n\n    \n    condicion : expresion\n              | condicion operadorBool expresion\n    operadorBool : TkAnd\n                    | TkOr\n                    | TkNot\n    \n    \n    relacion : TkLess\n             | TkGreater\n             | TkLeq\n             | TkGeq\n             | TkEqual\n             | TkNEqual\n     read : TkRead TkId  print : TkPrint concatPrint \n              | TkPrintln concatPrint\n    concatPrint : concatPrint TkConcat expresion\n                   | expresion\n\n    tipo : TkBool\n            | TkInt\n            | TkArray TkOBracket number TkSoForth number TkCBracket\n    \n        number : TkNum\n               | TkMinus TkNum\n    empty :expresion : term\n                 | addingOperator term\n                 | operadorBool expresion\n                 | expresion addingOperator term\n                 | expresion relacion expresion\n                 | embed\n    addingOperator : TkPlus\n                      | TkMinus\n    term : factor\n            | term multiplyingOperator factor\n    multiplyingOperator : TkMult\n                           | TkDiv\n                           | TkMod\n    factor : TkId\n              | TkNum\n              | TkString\n              | TkTrue\n              | TkFalse\n              | TkMinus TkNum\n              | TkOpenPar expresion TkClosePar\n              | TkId TkOBracket expresion TkCBracket\n    embed : TkMax TkOpenPar TkId TkClosePar\n             | TkMin TkOpenPar TkId TkClosePar\n             | TkAtoi TkOpenPar TkId TkClosePar\n             | TkSize TkOpenPar TkId TkClosePar\n    '
    
_lr_action_items = {'TkMod':([28,31,32,33,38,40,41,60,63,87,100,103,106,120,129,],[-84,-75,-80,-81,70,-82,-83,-85,70,-80,-86,-76,70,-80,-87,]),'TkMin':([7,10,11,17,27,29,34,44,45,49,51,57,65,73,74,75,76,77,78,79,82,90,91,94,95,115,143,148,149,153,],[24,24,24,24,24,-47,24,-49,-48,24,24,24,24,24,-55,-52,-51,24,-50,-53,-54,24,24,24,24,24,24,24,24,24,]),'TkGuard':([12,18,19,22,28,31,32,33,38,39,40,41,42,43,53,55,60,62,63,86,87,88,89,100,103,104,105,106,114,117,118,119,120,123,124,125,127,128,129,130,131,138,141,142,165,166,167,172,173,174,178,188,190,191,200,],[-27,-28,-26,-2,-84,-75,-80,-81,-67,-57,-82,-83,-72,-60,-58,-56,-85,-69,-68,-12,-80,-11,-14,-86,-76,-59,-71,-70,-66,143,143,143,-80,143,143,143,-89,-88,-87,-90,-91,-15,-19,-13,143,143,143,143,143,143,-18,-17,143,143,-16,]),'TkPrint':([2,23,46,91,95,109,110,111,112,148,153,155,156,179,199,],[7,7,7,7,7,-6,-61,-62,-8,7,7,-5,-7,7,-63,]),'TkArrow':([28,31,32,33,38,40,41,42,50,52,56,60,62,63,100,103,105,106,116,121,126,127,128,129,130,131,161,168,],[-84,-75,-80,-81,-67,-82,-83,-72,91,-45,95,-85,-69,-68,-86,-76,-71,-70,-46,148,153,-89,-88,-87,-90,-91,179,183,]),'TkComma':([28,31,32,33,38,40,41,42,47,60,62,63,87,88,89,100,103,105,106,110,111,112,127,128,129,130,131,142,199,],[-84,-75,-80,-81,-67,-82,-83,-72,84,-85,-69,-68,-80,115,-14,-86,-76,-71,-70,-61,-62,134,-89,-88,-87,-90,-91,-13,-63,]),'TkDeclare':([2,],[8,]),'TkTrue':([7,10,11,17,25,27,29,30,34,35,44,45,49,51,57,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,90,91,94,95,115,143,148,149,153,],[41,41,41,41,-74,41,-47,41,41,-73,-49,-48,41,41,41,41,41,-79,-77,-78,41,-55,-52,-51,41,-50,-53,41,-74,-54,41,41,41,41,41,41,41,41,41,]),'TkIn':([54,],[94,]),'TkLess':([28,31,32,33,38,40,41,42,43,52,60,62,63,66,87,89,93,99,100,103,104,105,106,116,117,120,122,123,127,128,129,130,131,142,165,168,174,],[-84,-75,-80,-81,-67,-82,-83,-72,78,78,-85,78,-68,78,-80,78,78,78,-86,-76,78,78,-70,78,78,-80,78,78,-89,-88,-87,-90,-91,78,78,78,78,]),'TkOpenPar':([7,10,11,17,24,25,26,27,29,30,34,35,36,37,44,45,49,51,57,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,87,90,91,94,95,114,115,143,148,149,153,188,200,],[34,51,34,57,59,-74,61,34,-47,34,34,-73,67,68,-49,-48,34,34,34,34,34,-79,-77,-78,34,-55,-52,-51,34,-50,-53,34,-74,-54,113,34,34,34,34,139,34,34,34,34,34,-17,-16,]),'TkString':([7,10,11,17,25,27,29,30,34,35,44,45,49,51,57,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,90,91,94,95,115,143,148,149,153,],[40,40,40,40,-74,40,-47,40,40,-73,-49,-48,40,40,40,40,40,-79,-77,-78,40,-55,-52,-51,40,-50,-53,40,-74,-54,40,40,40,40,40,40,40,40,40,]),'TkPlus':([7,10,11,17,27,28,29,31,32,33,34,38,40,41,42,43,44,45,49,51,52,57,60,62,63,65,66,73,74,75,76,77,78,79,82,87,89,90,91,93,94,95,99,100,103,104,105,106,115,116,117,120,122,123,127,128,129,130,131,142,143,148,149,153,165,168,174,],[35,35,35,35,35,-84,-47,-75,-80,-81,35,-67,-82,-83,-72,35,-49,-48,35,35,35,35,-85,35,-68,35,35,35,-55,-52,-51,35,-50,-53,-54,-80,35,35,35,35,35,35,35,-86,-76,35,35,-70,35,35,35,-80,35,35,-89,-88,-87,-90,-91,35,35,35,35,35,35,35,35,]),'TkLeq':([28,31,32,33,38,40,41,42,43,52,60,62,63,66,87,89,93,99,100,103,104,105,106,116,117,120,122,123,127,128,129,130,131,142,165,168,174,],[-84,-75,-80,-81,-67,-82,-83,-72,75,75,-85,75,-68,75,-80,75,75,75,-86,-76,75,75,-70,75,75,-80,75,75,-89,-88,-87,-90,-91,75,75,75,75,]),'TkTwoPoints':([47,48,107,136,137,157,159,],[-10,85,-9,158,-64,-65,177,]),'TkNEqual':([28,31,32,33,38,40,41,42,43,52,60,62,63,66,87,89,93,99,100,103,104,105,106,116,117,120,122,123,127,128,129,130,131,142,165,168,174,],[-84,-75,-80,-81,-67,-82,-83,-72,74,74,-85,74,-68,74,-80,74,74,74,-86,-76,74,74,-70,74,74,-80,74,74,-89,-88,-87,-90,-91,74,74,74,74,]),'TkDiv':([28,31,32,33,38,40,41,60,63,87,100,103,106,120,129,],[-84,-75,-80,-81,72,-82,-83,-85,72,-80,-86,-76,72,-80,-87,]),'TkFi':([12,18,19,22,28,31,32,33,38,39,40,41,42,43,53,55,60,62,63,86,87,88,89,100,103,104,105,106,114,120,123,124,125,127,128,129,130,131,138,141,142,145,150,151,152,172,173,174,178,184,185,186,188,190,191,200,201,202,],[-27,-28,-26,-2,-84,-75,-80,-81,-67,-57,-82,-83,-72,-60,-58,-56,-85,-69,-68,-12,-80,-11,-14,-86,-76,-59,-71,-70,-66,-80,-66,-66,-66,-89,-88,-87,-90,-91,-15,-19,-13,-37,169,170,171,-66,-66,-66,-18,196,197,198,-17,-66,-66,-16,-35,-36,]),'$end':([1,3,22,],[0,-1,-2,]),'TkIf':([2,23,46,109,110,111,112,155,156,199,],[17,17,17,-6,-61,-62,-8,-5,-7,-63,]),'TkRof':([22,195,],[-2,203,]),'TkGeq':([28,31,32,33,38,40,41,42,43,52,60,62,63,66,87,89,93,99,100,103,104,105,106,116,117,120,122,123,127,128,129,130,131,142,165,168,174,],[-84,-75,-80,-81,-67,-82,-83,-72,79,79,-85,79,-68,79,-80,79,79,79,-86,-76,79,79,-70,79,79,-80,79,79,-89,-88,-87,-90,-91,79,79,79,79,]),'TkNot':([7,10,11,17,27,28,29,31,32,33,34,38,40,41,42,44,45,49,50,51,52,56,57,60,62,63,65,73,74,75,76,77,78,79,82,90,91,92,93,94,95,96,100,103,105,106,115,116,127,128,129,130,131,143,148,149,153,161,],[44,44,44,44,44,-84,-47,-75,-80,-81,44,-67,-82,-83,-72,-49,-48,44,44,44,-45,44,44,-85,-69,-68,44,44,-55,-52,-51,44,-50,-53,-54,44,44,44,-45,44,44,44,-86,-76,-71,-70,44,-46,-89,-88,-87,-90,-91,44,44,44,44,44,]),'TkOr':([7,10,11,17,27,28,29,31,32,33,34,38,40,41,42,44,45,49,50,51,52,56,57,60,62,63,65,73,74,75,76,77,78,79,82,90,91,92,93,94,95,96,100,103,105,106,115,116,127,128,129,130,131,143,148,149,153,161,],[45,45,45,45,45,-84,-47,-75,-80,-81,45,-67,-82,-83,-72,-49,-48,45,45,45,-45,45,45,-85,-69,-68,45,45,-55,-52,-51,45,-50,-53,-54,45,45,45,-45,45,45,45,-86,-76,-71,-70,45,-46,-89,-88,-87,-90,-91,45,45,45,45,45,]),'TkTo':([28,31,32,33,38,40,41,42,60,62,63,100,103,105,106,122,127,128,129,130,131,],[-84,-75,-80,-81,-67,-82,-83,-72,-85,-69,-68,-86,-76,-71,-70,149,-89,-88,-87,-90,-91,]),'TkEqual':([28,31,32,33,38,40,41,42,43,52,60,62,63,66,87,89,93,99,100,103,104,105,106,116,117,120,122,123,127,128,129,130,131,142,165,168,174,],[-84,-75,-80,-81,-67,-82,-83,-72,82,82,-85,82,-68,82,-80,82,82,82,-86,-76,82,82,-70,82,82,-80,82,82,-89,-88,-87,-90,-91,82,82,82,82,]),'TkOBlock':([0,91,95,148,153,179,183,],[2,2,2,2,2,2,2,]),'TkMinus':([7,10,11,17,25,27,28,29,30,31,32,33,34,35,38,40,41,42,43,44,45,49,51,52,57,60,62,63,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,87,89,90,91,93,94,95,99,100,103,104,105,106,113,115,116,117,120,122,123,127,128,129,130,131,132,139,140,142,143,148,149,153,158,165,168,174,175,177,],[25,25,25,25,-74,25,-84,-47,64,-75,-80,-81,25,-73,-67,-82,-83,-72,81,-49,-48,25,25,81,25,-85,81,-68,25,81,64,-79,-77,-78,25,-55,-52,-51,25,-50,-53,64,-74,-54,-80,81,25,25,81,25,25,81,-86,-76,81,81,-70,135,25,81,81,-80,81,81,-89,-88,-87,-90,-91,135,135,135,81,25,25,25,25,135,81,81,81,135,135,]),'TkMax':([7,10,11,17,27,29,34,44,45,49,51,57,65,73,74,75,76,77,78,79,82,90,91,94,95,115,143,148,149,153,],[26,26,26,26,26,-47,26,-49,-48,26,26,26,26,26,-55,-52,-51,26,-50,-53,-54,26,26,26,26,26,26,26,26,26,]),'TkOBracket':([32,87,108,114,120,188,200,],[65,65,132,140,65,-17,-16,]),'TkClosePar':([28,31,32,33,38,40,41,42,60,62,63,66,92,93,96,97,98,100,101,102,103,105,106,116,127,128,129,130,131,137,157,176,189,],[-84,-75,-80,-81,-67,-82,-83,-72,-85,-69,-68,100,121,100,126,127,128,-86,130,131,-76,-71,-70,-46,-89,-88,-87,-90,-91,-64,-65,188,200,]),'TkFalse':([7,10,11,17,25,27,29,30,34,35,44,45,49,51,57,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,90,91,94,95,115,143,148,149,153,],[28,28,28,28,-74,28,-47,28,28,-73,-49,-48,28,28,28,28,28,-79,-77,-78,28,-55,-52,-51,28,-50,-53,28,-74,-54,28,28,28,28,28,28,28,28,28,]),'TkOd':([12,18,19,22,28,31,32,33,38,39,40,41,42,43,53,55,60,62,63,86,87,88,89,100,103,104,105,106,114,117,118,119,120,127,128,129,130,131,138,141,142,144,145,146,147,165,166,167,178,180,181,182,188,190,191,200,201,202,],[-27,-28,-26,-2,-84,-75,-80,-81,-67,-57,-82,-83,-72,-60,-58,-56,-85,-69,-68,-12,-80,-11,-14,-86,-76,-59,-71,-70,-66,-66,-66,-66,-80,-89,-88,-87,-90,-91,-15,-19,-13,162,-37,163,164,-66,-66,-66,-18,192,193,194,-17,-66,-66,-16,-35,-36,]),'TkAtoi':([7,10,11,17,27,29,34,44,45,49,51,57,65,73,74,75,76,77,78,79,82,90,91,94,95,115,143,148,149,153,],[36,36,36,36,36,-47,36,-49,-48,36,36,36,36,36,-55,-52,-51,36,-50,-53,-54,36,36,36,36,36,36,36,36,36,]),'TkGreater':([28,31,32,33,38,40,41,42,43,52,60,62,63,66,87,89,93,99,100,103,104,105,106,116,117,120,122,123,127,128,129,130,131,142,165,168,174,],[-84,-75,-80,-81,-67,-82,-83,-72,76,76,-85,76,-68,76,-80,76,76,76,-86,-76,76,76,-70,76,76,-80,76,76,-89,-88,-87,-90,-91,76,76,76,76,]),'TkBool':([85,134,],[110,110,]),'TkId':([2,7,8,10,11,13,15,17,23,25,27,29,30,34,35,44,45,46,49,51,57,59,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,90,91,94,95,109,110,111,112,115,133,143,148,149,153,155,156,199,],[9,32,47,32,32,54,55,32,9,-74,32,-47,32,32,-73,-49,-48,9,87,32,32,97,98,32,101,102,32,-79,-77,-78,32,-55,-52,-51,32,-50,-53,32,-74,-54,47,32,120,32,120,-6,-61,-62,-8,32,47,32,120,32,120,-5,-7,-63,]),'TkMult':([28,31,32,33,38,40,41,60,63,87,100,103,106,120,129,],[-84,-75,-80,-81,71,-82,-83,-85,71,-80,-86,-76,71,-80,-87,]),'TkConcat':([28,31,32,33,38,39,40,41,42,43,53,60,62,63,100,103,104,105,106,127,128,129,130,131,],[-84,-75,-80,-81,-67,73,-82,-83,-72,-60,73,-85,-69,-68,-86,-76,-59,-71,-70,-89,-88,-87,-90,-91,]),'TkSoForth':([137,154,157,],[-64,175,-65,]),'TkAnd':([7,10,11,17,27,28,29,31,32,33,34,38,40,41,42,44,45,49,50,51,52,56,57,60,62,63,65,73,74,75,76,77,78,79,82,90,91,92,93,94,95,96,100,103,105,106,115,116,127,128,129,130,131,143,148,149,153,161,],[29,29,29,29,29,-84,-47,-75,-80,-81,29,-67,-82,-83,-72,-49,-48,29,29,29,-45,29,29,-85,-69,-68,29,29,-55,-52,-51,29,-50,-53,-54,29,29,29,-45,29,29,29,-86,-76,-71,-70,29,-46,-89,-88,-87,-90,-91,29,29,29,29,29,]),'TkDo':([2,23,46,109,110,111,112,155,156,199,],[10,10,10,-6,-61,-62,-8,-5,-7,-63,]),'TkPrintln':([2,23,46,91,95,109,110,111,112,148,153,155,156,179,199,],[11,11,11,11,11,-6,-61,-62,-8,11,11,-5,-7,11,-63,]),'TkSize':([7,10,11,17,27,29,34,44,45,49,51,57,65,73,74,75,76,77,78,79,82,90,91,94,95,115,143,148,149,153,],[37,37,37,37,37,-47,37,-49,-48,37,37,37,37,37,-55,-52,-51,37,-50,-53,-54,37,37,37,37,37,37,37,37,37,]),'TkRead':([2,23,46,91,95,109,110,111,112,148,153,155,156,199,],[15,15,15,15,15,-6,-61,-62,-8,15,15,-5,-7,-63,]),'TkFor':([2,23,46,109,110,111,112,155,156,199,],[13,13,13,-6,-61,-62,-8,-5,-7,-63,]),'TkCBlock':([4,5,6,12,14,16,18,19,20,21,28,31,32,33,38,39,40,41,42,43,53,55,58,60,62,63,83,86,87,88,89,100,103,104,105,106,114,127,128,129,130,131,138,141,142,162,163,164,169,170,171,178,188,192,193,194,196,197,198,200,203,],[22,-3,-20,-27,-25,-24,-28,-26,-22,-23,-84,-75,-80,-81,-67,-57,-82,-83,-72,-60,-58,-56,-21,-85,-69,-68,-4,-12,-80,-11,-14,-86,-76,-59,-71,-70,-66,-89,-88,-87,-90,-91,-15,-19,-13,-41,-39,-40,-31,-29,-30,-18,-17,-44,-42,-43,-33,-32,-34,-16,-38,]),'TkArray':([85,134,],[108,108,]),'TkCBracket':([28,31,32,33,38,40,41,42,60,62,63,99,100,103,105,106,127,128,129,130,131,137,157,160,187,],[-84,-75,-80,-81,-67,-82,-83,-72,-85,-69,-68,129,-86,-76,-71,-70,-89,-88,-87,-90,-91,-64,-65,178,199,]),'TkNum':([7,10,11,17,25,27,29,30,34,35,44,45,49,51,57,64,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,90,91,94,95,113,115,132,135,139,140,143,148,149,153,158,175,177,],[33,33,33,33,60,33,-47,33,33,-73,-49,-48,33,33,33,60,33,33,-79,-77,-78,33,-55,-52,-51,33,-50,-53,33,-74,-54,33,33,33,33,137,33,137,157,137,137,33,33,33,33,137,137,137,]),'TkSemicolon':([5,6,12,14,16,18,19,20,21,28,31,32,33,38,39,40,41,42,43,53,55,58,60,62,63,83,86,87,88,89,100,103,104,105,106,109,110,111,112,114,127,128,129,130,131,138,141,142,156,162,163,164,169,170,171,178,188,192,193,194,196,197,198,199,200,203,],[23,-20,-27,-25,-24,-28,-26,-22,-23,-84,-75,-80,-81,-67,-57,-82,-83,-72,-60,-58,-56,-21,-85,-69,-68,23,-12,-80,-11,-14,-86,-76,-59,-71,-70,133,-61,-62,-8,-66,-89,-88,-87,-90,-91,-15,-19,-13,-7,-41,-39,-40,-31,-29,-30,-18,-17,-44,-42,-43,-33,-32,-34,-63,-16,-38,]),'TkAsig':([9,120,],[49,49,]),'TkInt':([85,134,],[111,111,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'casoInstrucciones':([2,46,],[5,83,]),'Instruccion':([2,23,46,],[6,58,6,]),'operadorBool':([7,10,11,17,27,34,49,50,51,56,57,65,73,77,90,91,92,94,95,96,115,143,148,149,153,161,],[27,27,27,27,27,27,27,90,27,90,27,27,27,27,27,27,90,27,27,90,27,27,27,27,27,90,]),'number':([113,132,139,140,158,175,177,],[136,154,159,160,176,187,189,]),'multiplyingOperator':([38,63,106,],[69,69,69,]),'program':([0,],[1,]),'factor':([7,10,11,17,27,30,34,49,51,57,65,69,73,77,80,90,91,94,95,115,143,148,149,153,],[31,31,31,31,31,31,31,31,31,31,31,103,31,31,31,31,31,31,31,31,31,31,31,31,]),'declaracionVariables':([8,133,],[46,155,]),'listaExpresion':([49,],[88,]),'listaIndices':([87,],[114,]),'addingOperator':([7,10,11,17,27,34,43,49,51,52,57,62,65,66,73,77,89,90,91,93,94,95,99,104,105,115,116,117,122,123,142,143,148,149,153,165,168,174,],[30,30,30,30,30,30,80,30,30,80,30,80,30,80,30,30,80,30,30,80,30,30,80,80,80,30,80,80,80,80,80,30,30,30,30,80,80,80,]),'singleInstruccion':([2,23,46,91,95,148,153,],[14,14,14,119,125,167,172,]),'listaDeclaraciones':([8,84,133,],[48,107,48,]),'t':([2,],[4,]),'asignacionArreglos':([49,],[86,]),'variasGuardias':([117,118,119,123,124,125,165,166,167,172,173,174,190,191,],[144,146,147,150,151,152,180,181,182,184,185,186,201,202,]),'term':([7,10,11,17,27,30,34,49,51,57,65,73,77,80,90,91,94,95,115,143,148,149,153,],[38,38,38,38,38,63,38,38,38,38,38,38,38,106,38,38,38,38,38,38,38,38,38,]),'concatPrint':([7,11,],[39,53,]),'bloque':([0,91,95,148,153,179,183,],[3,118,124,166,173,190,195,]),'read':([2,23,46,91,95,148,153,],[12,12,12,12,12,12,12,]),'expresion':([7,10,11,17,27,34,49,51,57,65,73,77,90,91,94,95,115,143,148,149,153,],[43,52,43,52,62,66,89,93,93,99,104,105,116,117,122,123,142,52,165,168,174,]),'tipos':([85,134,],[109,156,]),'condicion':([10,17,51,57,143,],[50,56,92,96,161,]),'Do':([2,23,46,],[16,16,16,]),'embed':([7,10,11,17,27,34,49,51,57,65,73,77,90,91,94,95,115,143,148,149,153,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'print':([2,23,46,91,95,148,153,179,],[18,18,18,18,18,18,18,191,]),'asignacion':([2,23,46,91,95,148,153,],[19,19,19,19,19,19,19,]),'relacion':([43,52,62,66,89,93,99,104,105,116,117,122,123,142,165,168,174,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'posicionArreglo':([114,],[138,]),'If':([2,23,46,],[20,20,20,]),'For':([2,23,46,],[21,21,21,]),'empty':([114,117,118,119,123,124,125,165,166,167,172,173,174,190,191,],[141,145,145,145,145,145,145,145,145,145,145,145,145,145,145,]),'tipo':([85,134,],[112,112,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> bloque','program',1,'p_program','parser.py',43),
  ('bloque -> TkOBlock t TkCBlock','bloque',3,'p_bloque','parser.py',50),
  ('t -> casoInstrucciones','t',1,'p_t','parser.py',60),
  ('t -> TkDeclare declaracionVariables casoInstrucciones','t',3,'p_t','parser.py',61),
  ('declaracionVariables -> listaDeclaraciones TkTwoPoints tipos TkSemicolon declaracionVariables','declaracionVariables',5,'p_declaracionVariables','parser.py',73),
  ('declaracionVariables -> listaDeclaraciones TkTwoPoints tipos','declaracionVariables',3,'p_declaracionVariables','parser.py',74),
  ('tipos -> tipo TkComma tipos','tipos',3,'p_tipos','parser.py',136),
  ('tipos -> tipo','tipos',1,'p_tipos','parser.py',137),
  ('listaDeclaraciones -> TkId TkComma listaDeclaraciones','listaDeclaraciones',3,'p_listaDeclaraciones','parser.py',146),
  ('listaDeclaraciones -> TkId','listaDeclaraciones',1,'p_listaDeclaraciones','parser.py',147),
  ('asignacion -> TkId TkAsig listaExpresion','asignacion',3,'p_asignacion','parser.py',157),
  ('asignacion -> TkId TkAsig asignacionArreglos','asignacion',3,'p_asignacion','parser.py',158),
  ('listaExpresion -> listaExpresion TkComma expresion','listaExpresion',3,'p_listaExpresion','parser.py',231),
  ('listaExpresion -> expresion','listaExpresion',1,'p_listaExpresion','parser.py',232),
  ('asignacionArreglos -> TkId listaIndices posicionArreglo','asignacionArreglos',3,'p_asignacionArreglos','parser.py',242),
  ('listaIndices -> listaIndices TkOpenPar number TkTwoPoints number TkClosePar','listaIndices',6,'p_listaIndices','parser.py',247),
  ('listaIndices -> TkOpenPar number TkTwoPoints number TkClosePar','listaIndices',5,'p_listaIndices','parser.py',248),
  ('posicionArreglo -> TkOBracket number TkCBracket','posicionArreglo',3,'p_posicionArreglo','parser.py',257),
  ('posicionArreglo -> empty','posicionArreglo',1,'p_posicionArreglo','parser.py',258),
  ('casoInstrucciones -> Instruccion','casoInstrucciones',1,'p_casoInstrucciones','parser.py',270),
  ('casoInstrucciones -> casoInstrucciones TkSemicolon Instruccion','casoInstrucciones',3,'p_casoInstrucciones','parser.py',271),
  ('Instruccion -> If','Instruccion',1,'p_Instruccion','parser.py',288),
  ('Instruccion -> For','Instruccion',1,'p_Instruccion','parser.py',289),
  ('Instruccion -> Do','Instruccion',1,'p_Instruccion','parser.py',290),
  ('Instruccion -> singleInstruccion','Instruccion',1,'p_Instruccion','parser.py',291),
  ('singleInstruccion -> asignacion','singleInstruccion',1,'p_singleInstruccion','parser.py',300),
  ('singleInstruccion -> read','singleInstruccion',1,'p_singleInstruccion','parser.py',301),
  ('singleInstruccion -> print','singleInstruccion',1,'p_singleInstruccion','parser.py',302),
  ('If -> TkIf condicion TkArrow bloque variasGuardias TkFi','If',6,'p_If','parser.py',312),
  ('If -> TkIf condicion TkArrow singleInstruccion variasGuardias TkFi','If',6,'p_If','parser.py',313),
  ('If -> TkIf condicion TkArrow expresion variasGuardias TkFi','If',6,'p_If','parser.py',314),
  ('If -> TkIf TkOpenPar condicion TkClosePar TkArrow bloque variasGuardias TkFi','If',8,'p_If','parser.py',315),
  ('If -> TkIf TkOpenPar condicion TkClosePar TkArrow singleInstruccion variasGuardias TkFi','If',8,'p_If','parser.py',316),
  ('If -> TkIf TkOpenPar condicion TkClosePar TkArrow expresion variasGuardias TkFi','If',8,'p_If','parser.py',317),
  ('variasGuardias -> TkGuard condicion TkArrow bloque variasGuardias','variasGuardias',5,'p_variasGuardias','parser.py',328),
  ('variasGuardias -> TkGuard condicion TkArrow print variasGuardias','variasGuardias',5,'p_variasGuardias','parser.py',329),
  ('variasGuardias -> empty','variasGuardias',1,'p_variasGuardias','parser.py',330),
  ('For -> TkFor TkId TkIn expresion TkTo expresion TkArrow bloque TkRof','For',9,'p_For','parser.py',342),
  ('Do -> TkDo condicion TkArrow bloque variasGuardias TkOd','Do',6,'p_Do','parser.py',367),
  ('Do -> TkDo condicion TkArrow singleInstruccion variasGuardias TkOd','Do',6,'p_Do','parser.py',368),
  ('Do -> TkDo condicion TkArrow expresion variasGuardias TkOd','Do',6,'p_Do','parser.py',369),
  ('Do -> TkDo TkOpenPar condicion TkClosePar TkArrow bloque variasGuardias TkOd','Do',8,'p_Do','parser.py',370),
  ('Do -> TkDo TkOpenPar condicion TkClosePar TkArrow singleInstruccion variasGuardias TkOd','Do',8,'p_Do','parser.py',371),
  ('Do -> TkDo TkOpenPar condicion TkClosePar TkArrow expresion variasGuardias TkOd','Do',8,'p_Do','parser.py',372),
  ('condicion -> expresion','condicion',1,'p_condicion','parser.py',386),
  ('condicion -> condicion operadorBool expresion','condicion',3,'p_condicion','parser.py',387),
  ('operadorBool -> TkAnd','operadorBool',1,'p_operadorBool','parser.py',399),
  ('operadorBool -> TkOr','operadorBool',1,'p_operadorBool','parser.py',400),
  ('operadorBool -> TkNot','operadorBool',1,'p_operadorBool','parser.py',401),
  ('relacion -> TkLess','relacion',1,'p_relacion','parser.py',415),
  ('relacion -> TkGreater','relacion',1,'p_relacion','parser.py',416),
  ('relacion -> TkLeq','relacion',1,'p_relacion','parser.py',417),
  ('relacion -> TkGeq','relacion',1,'p_relacion','parser.py',418),
  ('relacion -> TkEqual','relacion',1,'p_relacion','parser.py',419),
  ('relacion -> TkNEqual','relacion',1,'p_relacion','parser.py',420),
  ('read -> TkRead TkId','read',2,'p_read','parser.py',447),
  ('print -> TkPrint concatPrint','print',2,'p_print','parser.py',460),
  ('print -> TkPrintln concatPrint','print',2,'p_print','parser.py',461),
  ('concatPrint -> concatPrint TkConcat expresion','concatPrint',3,'p_concatPrint','parser.py',471),
  ('concatPrint -> expresion','concatPrint',1,'p_concatPrint','parser.py',472),
  ('tipo -> TkBool','tipo',1,'p_tipo','parser.py',485),
  ('tipo -> TkInt','tipo',1,'p_tipo','parser.py',486),
  ('tipo -> TkArray TkOBracket number TkSoForth number TkCBracket','tipo',6,'p_tipo','parser.py',487),
  ('number -> TkNum','number',1,'p_number','parser.py',497),
  ('number -> TkMinus TkNum','number',2,'p_number','parser.py',498),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',507),
  ('expresion -> term','expresion',1,'p_expresion','parser.py',519),
  ('expresion -> addingOperator term','expresion',2,'p_expresion','parser.py',520),
  ('expresion -> operadorBool expresion','expresion',2,'p_expresion','parser.py',521),
  ('expresion -> expresion addingOperator term','expresion',3,'p_expresion','parser.py',522),
  ('expresion -> expresion relacion expresion','expresion',3,'p_expresion','parser.py',523),
  ('expresion -> embed','expresion',1,'p_expresion','parser.py',524),
  ('addingOperator -> TkPlus','addingOperator',1,'p_addingOperator','parser.py',550),
  ('addingOperator -> TkMinus','addingOperator',1,'p_addingOperator','parser.py',551),
  ('term -> factor','term',1,'p_term','parser.py',560),
  ('term -> term multiplyingOperator factor','term',3,'p_term','parser.py',561),
  ('multiplyingOperator -> TkMult','multiplyingOperator',1,'p_multiplyingOperator','parser.py',570),
  ('multiplyingOperator -> TkDiv','multiplyingOperator',1,'p_multiplyingOperator','parser.py',571),
  ('multiplyingOperator -> TkMod','multiplyingOperator',1,'p_multiplyingOperator','parser.py',572),
  ('factor -> TkId','factor',1,'p_factor','parser.py',585),
  ('factor -> TkNum','factor',1,'p_factor','parser.py',586),
  ('factor -> TkString','factor',1,'p_factor','parser.py',587),
  ('factor -> TkTrue','factor',1,'p_factor','parser.py',588),
  ('factor -> TkFalse','factor',1,'p_factor','parser.py',589),
  ('factor -> TkMinus TkNum','factor',2,'p_factor','parser.py',590),
  ('factor -> TkOpenPar expresion TkClosePar','factor',3,'p_factor','parser.py',591),
  ('factor -> TkId TkOBracket expresion TkCBracket','factor',4,'p_factor','parser.py',592),
  ('embed -> TkMax TkOpenPar TkId TkClosePar','embed',4,'p_embed','parser.py',624),
  ('embed -> TkMin TkOpenPar TkId TkClosePar','embed',4,'p_embed','parser.py',625),
  ('embed -> TkAtoi TkOpenPar TkId TkClosePar','embed',4,'p_embed','parser.py',626),
  ('embed -> TkSize TkOpenPar TkId TkClosePar','embed',4,'p_embed','parser.py',627),
]
